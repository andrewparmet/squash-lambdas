[versions]
aws-v1 = "1.12.788"
aws-v2 = "2.32.23"
aws-lambda-core = "1.3.0"
aws-lambda-events = "2.2.9"
buildConfig = "5.6.5"
commons-email = "1.6.0"
dagger = "2.57"
google-calendar = "v3-rev20250404-2.0.0"
google-oauth2-http = "1.37.1"
guava = "33.2.1-jre"
hoplite = "2.9.0"
jvmTarget = "21"
jsoup = "1.21.1"
junit = "5.13.4"
jackson = "2.17.2"
kotlin = "2.2.0"
kotlinLogging = "7.0.12"
ksp = "2.2.0-2.0.2"
log4j = "2.25.1"
mockk = "1.14.5"
reflections = "0.10.2"
shadow = "9.0.1"
spotless = "7.2.1"
testcontainers = "1.19.3"
truth = "1.4.4"

[plugins]
buildConfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildConfig" }
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
shadow = { id = "com.gradleup.shadow", version.ref = "shadow" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }

[libraries]
aws-bom = { module = "software.amazon.awssdk:bom", version.ref = "aws-v2" }
aws-dynamodb = { module = "software.amazon.awssdk:dynamodb" }
aws-lambda-core = { module = "com.amazonaws:aws-lambda-java-core", version.ref = "aws-lambda-core" }
aws-lambda-events = { module = "com.amazonaws:aws-lambda-java-events", version.ref = "aws-lambda-events" }
aws-s3 = { module = "software.amazon.awssdk:s3" }
aws-sns = { module = "software.amazon.awssdk:sns" }
aws-v1-s3 = { module = "com.amazonaws:aws-java-sdk-s3", version.ref = "aws-v1" }
commons-email = { module = "org.apache.commons:commons-email", version.ref = "commons-email" }
dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }
google-calendar = { module = "com.google.apis:google-api-services-calendar", version.ref = "google-calendar" }
google-oauth2-http = { module = "com.google.auth:google-auth-library-oauth2-http", version.ref = "google-oauth2-http" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
hoplite = { module = "com.sksamuel.hoplite:hoplite-yaml", version.ref = "hoplite" }
jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }
junit = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }
junit-platformLauncher = { module = "org.junit.platform:junit-platform-launcher" }
jackson-bom = { module = "com.fasterxml.jackson:jackson-bom", version.ref = "jackson" }
jackson-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin" }
jackson-joda = { module = "com.fasterxml.jackson.datatype:jackson-datatype-joda" }
jackson-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" }
kotlinLogging = { module = "io.github.oshai:kotlin-logging", version.ref = "kotlinLogging" }
log4j-bom = { module = "org.apache.logging.log4j:log4j-bom", version.ref = "log4j" }
log4j-core = { module = "org.apache.logging.log4j:log4j-core" }
log4j-jcl = { module = "org.apache.logging.log4j:log4j-jcl" }
log4j-slf4jImpl = { module = "org.apache.logging.log4j:log4j-slf4j-impl" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
reflections = { module = "org.reflections:reflections", version.ref = "reflections" }
testcontainers-localstack = { module = "org.testcontainers:localstack", version.ref = "testcontainers" }
testcontainers-junit = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
truth = { module = "com.google.truth:truth", version.ref = "truth" }
